{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["timeToDate","time","date","Date","concat","getFullYear","getMonth","getDate","dateToTime","getTime","PrimaryButton","react_default","a","createElement","className","type","onClick","this","props","clickHandler","disabled","text","React","Component","Stock","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","select","bind","assertThisInitialized","e","selectHandler","name","target","checked","cName","selected","value","rate","toFixed","currency","quantity","onChange","RenamePortfolioModal","_this2","state","initialName","handleChange","rename","setState","renameHandler","document","getElementById","k","click","id","tabIndex","role","aria-hidden","data-dismiss","aria-label","htmlFor","placeholder","AddStockModal","_this3","symbol","canAddStock","addStock","defineProperty","toUpperCase","addStockHandler","isCorrectSymbolHandler","required","min","step","GraphModal","_this4","datasets","labels","dateA","dateB","stocks","resolution","updateChart1m","updateChart3m","updateChart6m","updateChart1y","updateChart2y","updateChart5y","updateChartCustom","updateDateA","updateDateB","newProps","updateChart","_this5","useCustom","arguments","length","undefined","keys","forEach","s","fetch","then","res","json","col","Math","floor","random","filter","val","u","label","fill","backgroundColor","borderColor","data","map","open","n","alert","values","es","width","height","options","maintainAspectRatio","Portfolio","_this6","deletePortfolio","showInEuros","showInDollars","selectStock","deleteStocks","deleteHandler","preventDefault","setCurrencyHandler","newName","oldStocks","i","hasOwnProperty","getStockValueHandler","setStocksHandler","deleteStocksHandler","_this7","entries","p","App_Stock","key","reduce","acc","someSelected","style","padding","margin","boxShadow","data-toggle","data-target","App_RenamePortfolioModal","App_AddStockModal","App_GraphModal","App","_this8","portfolios","portfolioCounter","stocksData","USDtoEUR","addPortfolio","renamePortfolio","setStocks","setCurrency","isCorrectSymbol","getStockValue","_this9","console","log","m","o","price","_this10","success","rates","USD","_this11","refreshCurrencyRate","refreshSymbolsList","symbolRefreshId","setInterval","rateRefreshId","save","localStorage","getItem","JSON","parse","clearInterval","Storage","setItem","stringify","_this12","maxPortfolios","saveState","_this13","_this14","portfolioId","newStocks","_this15","_this16","_this17","stock","_this18","portfoliosList","chunk","slice","App_Portfolio","push","App_PrimaryButton","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e93fb017.chunk.js","sourcesContent":["import React from 'react';\nimport {Line} from 'react-chartjs-2';\n\nfunction timeToDate(time) {\n    var date = new Date(time);\n    return `${date.getFullYear()}-${(date.getMonth()+1)}-${date.getDate()}`;\n}\n\nfunction dateToTime(date) {\n    return new Date(date).getTime();\n}\n\nclass PrimaryButton extends React.Component {\n    render() {\n        return(<button className=\"btn btn-primary\" type=\"button\" onClick={this.props.clickHandler} disabled={this.props.disabled}>{this.props.text}</button>);\n    }\n}\n\nclass Stock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.select = this.select.bind(this);\n    }\n\n    select(e) {\n        this.props.selectHandler(this.props.name, e.target.checked);\n    }\n\n    render() {\n        const cName = (this.props.selected) ? \"table-primary\" : \"\";\n        return(\n            <tr className={cName}>\n                <td>{this.props.name}</td>\n                <td>{(this.props.value * this.props.rate).toFixed(2)}{this.props.currency}</td>\n                <td>{this.props.quantity}</td>\n                <td>{(this.props.value * this.props.quantity * this.props.rate).toFixed(2)}{this.props.currency}</td>\n                <td className=\"text-center\"><input className=\"form-check-input\" type=\"checkbox\" value=\"\" checked={this.props.selected} onChange={this.select}/></td>\n            </tr>\n        );\n    }\n}\n\nclass RenamePortfolioModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: props.initialName\n        };\n        // Handlers bindings\n        this.handleChange = this.handleChange.bind(this);\n        this.rename = this.rename.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n\n    rename() {\n        // Propagate the new name to the portfolio\n        this.props.renameHandler(this.state.name);\n        // Close the modal\n        document.getElementById(\"modal-rename-close-\"+this.props.k).click();\n    }\n\n    render() {\n        return(\n            <div className=\"modal fade\" id={\"modal-rename-\"+this.props.k} tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\">Rename portfolio</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n                </div>\n                <div className=\"modal-body\">\n                    <div className=\"form-group\">\n                        <label htmlFor={\"input-rename-\"+this.props.k}>New name :</label>\n                        <input type=\"text\" className=\"form-control\" id={\"input-rename-\"+this.props.k} placeholder=\"Enter here the new name of this portfolio\" value={this.state.name} onChange={this.handleChange}></input>\n                    </div>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" id={\"modal-rename-close-\"+this.props.k}>Close</button>\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.rename}>Save changes</button>\n                </div>\n                </div>\n            </div>\n            </div>\n        );\n    }\n}\n\nclass AddStockModal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            symbol: \"\", \n            quantity: 1, \n            canAddStock: false\n        };\n        // Handlers bindings\n        this.handleChange = this.handleChange.bind(this);\n        this.addStock = this.addStock.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value.toUpperCase()\n        });\n    }\n\n    addStock() {\n        // Propagate the creation to the portfolio\n        this.props.addStockHandler(this.state.symbol, this.state.quantity);\n        // Close the modal\n        document.getElementById(\"modal-addstock-close-\"+this.props.k).click();\n    }\n\n    render() {\n        const canAddStock = this.state.quantity > 0 && this.props.isCorrectSymbolHandler(this.state.symbol);\n        return(\n            <div className=\"modal fade\" id={\"modal-addstock-\"+this.props.k} tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\">Add stock</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n                </div>\n                <div className=\"modal-body\">\n                    <form>\n                        <div className=\"form-group\">\n                            <label htmlFor={\"input-addstock-symbol-\"+this.props.k}>Symbol :</label>\n                            <input type=\"text\" className=\"form-control\" id={\"input-addstock-symbol-\"+this.props.k} placeholder=\"Enter here the symbol of the stock\" value={this.state.symbol} onChange={this.handleChange} name=\"symbol\" required></input>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor={\"input-addstock-quantity-\"+this.props.k}>Quantity :</label>\n                            <input type=\"number\" min={1} step={1} className=\"form-control\" id={\"input-addstock-quantity-\"+this.props.k} placeholder=\"Enter here the number of shares\" value={this.state.quantity} onChange={this.handleChange} name=\"quantity\"></input>\n                        </div>\n                    </form>\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" id={\"modal-addstock-close-\"+this.props.k}>Close</button>\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.addStock} disabled={!canAddStock}>Add stock !</button>\n                </div>\n                </div>\n            </div>\n            </div>\n        );\n    }\n}\n\nclass GraphModal extends React.Component {\n    /*\n        The graph modal maintains its own state\n    */\n    constructor(props) {\n        super(props);\n        this.state = {\n            datasets: {}, \n            labels: [], \n            dateA: timeToDate((new Date()).getTime() - 1000*60*60*24*7),\n            dateB: timeToDate((new Date()).getTime()),\n        };\n        this.stocks = this.props.stocks;\n        this.resolution = \"1m\";\n        this.updateChart1m = this.updateChart1m.bind(this);\n        this.updateChart3m = this.updateChart3m.bind(this);\n        this.updateChart6m = this.updateChart6m.bind(this);\n        this.updateChart1y = this.updateChart1y.bind(this);\n        this.updateChart2y = this.updateChart2y.bind(this);\n        this.updateChart5y = this.updateChart5y.bind(this);\n        this.updateChartCustom = this.updateChartCustom.bind(this);\n        this.updateDateA = this.updateDateA.bind(this);\n        this.updateDateB = this.updateDateB.bind(this);\n    }\n\n    componentWillReceiveProps(newProps) {\n        this.stocks = newProps.stocks;\n        this.updateChart();\n    }\n\n    updateChart(useCustom = false) {\n        this.setState({\n            datasets: {}, \n            labels: []\n        });\n        Object.keys(this.stocks).forEach(s => {\n            fetch(`https://api.iextrading.com/1.0/stock/${s}/chart/${this.resolution}`)\n                .then(res => res.json())\n                .then(\n                    res => {\n                        const col = [Math.floor(Math.random() * Math.floor(256)), Math.floor(Math.random() * Math.floor(256)), Math.floor(Math.random() * Math.floor(256))];\n                        if(useCustom) {\n                            res = res.filter(val => {\n                                var time = dateToTime(val.date);\n                                return (time >= dateToTime(this.state.dateA) && time < dateToTime(this.state.dateB));\n                            });\n                        }\n                        var u = {\n                            label: s, \n                            fill: false,\n                            backgroundColor: `rgba(${col[0]}, ${col[1]}, ${col[2]}, 0.8)`,\n                            borderColor: `rgb(${col[0]}, ${col[1]}, ${col[2]})`,\n                            data: res.map(val => val.open)\n                        };\n                        var n = this.state.datasets;\n                        n[s] = u;\n                        this.setState({\n                            datasets: n, \n                            labels: res.map(val => val.label)\n                        });\n                    }, \n                    e => {\n                        alert(\"Error retrieving graph data for stocks...\"+e);\n                    }\n                );\n        });\n    }\n\n    updateChart1m() {\n        this.resolution = \"1m\";\n        this.updateChart();\n    }\n\n    updateChart3m() {\n        this.resolution = \"3m\";\n        this.updateChart();\n    }\n\n    updateChart6m() {\n        this.resolution = \"6m\";\n        this.updateChart();\n    }\n\n    updateChart1y() {\n        this.resolution = \"1y\";\n        this.updateChart();\n    }\n\n    updateChart2y() {\n        this.resolution = \"2y\";\n        this.updateChart();\n    }\n\n    updateChart5y() {\n        this.resolution = \"5y\";\n        this.updateChart();\n    }\n\n    updateChartCustom(e) {\n        this.resolution = \"5y\"; // Todo : find the best resolution based on time frame\n        this.updateChart(true);\n    }\n\n    updateDateA(e) {\n        this.setState({\n            dateA: e.target.value\n        });\n    }\n\n    updateDateB(e) {\n        this.setState({\n            dateB: e.target.value\n        });\n    }\n\n    render() {\n        /* const data = {\n            labels: [0, 1, 2], \n            datasets: Object.entries(this.state.stocks).map(s => ({\n                label: s[0],\n                data: this.datasets[s[0]]\n            }))\n        }; */\n        const data = {\n            labels: this.state.labels, \n            datasets: Object.values(this.state.datasets)\n        }\n        return(\n            <div className=\"modal fade\" id={\"modal-graph-\"+this.props.k} tabIndex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n                <div className=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\">{this.props.name} performance</h5>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <Line width={100} height={50} options={{ maintainAspectRatio: true }} data={data}/>\n                            <hr />\n                            <div className=\"row\">\n                                <div className=\"col-lg-2 text-center\"><button onClick={this.updateChart1m} type=\"button\" className=\"btn btn-info\">1 month</button></div>\n                                <div className=\"col-lg-2 text-center\"><button onClick={this.updateChart3m} type=\"button\" className=\"btn btn-info\">3 months</button></div>\n                                <div className=\"col-lg-2 text-center\"><button onClick={this.updateChart6m} type=\"button\" className=\"btn btn-info\">6 months</button></div>\n                                <div className=\"col-lg-2 text-center\"><button onClick={this.updateChart1y} type=\"button\" className=\"btn btn-info\">1 year</button></div>\n                                <div className=\"col-lg-2 text-center\"><button onClick={this.updateChart2y} type=\"button\" className=\"btn btn-info\">2 years</button></div>\n                                <div className=\"col-lg-2 text-center\"><button onClick={this.updateChart5y} type=\"button\" className=\"btn btn-info\">5 years</button></div>\n                            </div>\n                            <hr />\n                            <div className=\"row\">\n                                <div className=\"col-lg-12\">\n                                    <strong>Custom time frame:</strong> from &nbsp;\n                                    <input type=\"date\" onChange={this.updateDateA} value={this.state.dateA} /> &nbsp; to &nbsp; \n                                    <input type=\"date\" onChange={this.updateDateB} value={this.state.dateB} min={timeToDate(dateToTime(this.state.dateA) + 1000*60*60*24*7)} /> &nbsp;\n                                    <button type=\"button\" className=\"btn btn-info\" onClick={this.updateChartCustom}>View</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" id={\"modal-graph-close-\"+this.props.k}>Close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass Portfolio extends React.Component {\n    constructor(props) {\n        super(props);\n        // Handlers bindings\n        this.deletePortfolio = this.deletePortfolio.bind(this);\n        this.showInEuros = this.showInEuros.bind(this);\n        this.showInDollars = this.showInDollars.bind(this);\n        this.rename = this.rename.bind(this);\n        this.addStock = this.addStock.bind(this);\n        this.selectStock = this.selectStock.bind(this);\n        this.deleteStocks = this.deleteStocks.bind(this);\n    }\n\n    deletePortfolio(e) {\n        this.props.deleteHandler(this.props.k);\n    }\n\n    showInEuros(e) {\n        e.preventDefault(); // Prevent link anchor navigation\n        this.props.setCurrencyHandler(this.props.k, '€');\n    }\n\n    showInDollars(e) {\n        e.preventDefault(); // Prevent link anchor navigation\n        this.props.setCurrencyHandler(this.props.k, '$');\n    }\n\n    rename(newName) {\n        // Propagate the new name to the app\n        this.props.renameHandler(this.props.k, newName);\n    }\n\n    addStock(symbol, quantity) {\n        if(this.props.isCorrectSymbolHandler(symbol)) {\n            var oldStocks = {};\n            for(var i in this.props.stocks) {\n                oldStocks[i] = this.props.stocks[i];\n            }\n            if(!this.props.stocks.hasOwnProperty(symbol)) {\n                if(Object.values(this.props.stocks).length >= 50) {\n                    return;\n                }\n                // Rates and currencies are handled by App\n                oldStocks[symbol] = {};\n                oldStocks[symbol].value = this.props.getStockValueHandler(symbol);\n                oldStocks[symbol].quantity = 0;\n                oldStocks[symbol].selected = false;\n            }\n            oldStocks[symbol].quantity += +quantity;\n            // Propagate the new stock to the app\n            this.props.setStocksHandler(this.props.k, oldStocks);\n        }\n    }\n\n    selectStock(symbol, value) {\n        this.props.selectHandler(this.props.k, symbol, value);\n    }\n\n    deleteStocks() {\n        this.props.deleteStocksHandler(this.props.k);\n    }\n\n    render() {\n        const portfolioStyle = {\n            padding: \"0.5em\", \n            margin: \"0.5em\", \n            boxShadow: \"0px 0px 10px grey\"\n        };\n        var stocks = Object.entries(this.props.stocks).map((p) => <Stock name={p[0]} key={p[0]} value={p[1].value} quantity={p[1].quantity} selected={p[1].selected} currency={this.props.currency} rate={this.props.rate} selectHandler={this.selectStock}/>);\n        var value = Object.values(this.props.stocks).reduce((acc, val) => acc + val.value * val.quantity * this.props.rate, 0).toFixed(2);\n        var selectedStocks = Object.entries(this.props.stocks).filter(p => p[1].selected);\n        var someSelected = selectedStocks.length > 0;\n        /*\n        selectedStocks: \n            [\n                [\"symbol\", {value: X, quantity: X, selected: X}], \n                [\"symbol\", {value: X, quantity: X, selected: X}], \n                [\"symbol\", {value: X, quantity: X, selected: X}]\n            ]\n        */\n        return(<div className=\"col-lg-6\">\n            <div style={portfolioStyle}>\n                <div className=\"row\">\n                    <div className=\"col-lg-4 font-weight-bold\"><h5>{this.props.name}</h5></div>\n                    <div className=\"col-lg-1\"><button className=\"btn btn-info btn-sm\" data-toggle=\"modal\" data-target={\"#modal-rename-\"+this.props.k}><span className=\"oi oi-pencil\"></span></button></div>\n                    <div className=\"col-lg-3\"><button className=\"btn btn-link\" type=\"button\" onClick={this.showInDollars}>Show in $</button></div>\n                    <div className=\"col-lg-3\"><button className=\"btn btn-link\" type=\"button\" onClick={this.showInEuros}>Show in €</button></div>\n                    <div className=\"col-lg-1\"><button className=\"btn btn-danger btn-sm font-weight-bold float-right\" onClick={this.deletePortfolio}>&times;</button></div>\n                </div><br />\n                <table className=\"table table-sm\">\n                    <thead className=\"thead-light\">\n                        <tr>\n                            <th>Name</th>\n                            <th>Unit value</th>\n                            <th>Nb. of shares</th>\n                            <th>Total value</th>\n                            <th>Select</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {stocks}\n                    </tbody>\n                </table>\n                <p>Total value of {this.props.name} : {value}{this.props.currency}</p>\n                <div className=\"row\">\n                    <div className=\"col-lg-3\">\n                        <button className=\"btn btn-success\" data-toggle=\"modal\" data-target={\"#modal-addstock-\"+this.props.k}>Add stock</button>\n                    </div>\n                    <div className=\"col-lg-3\">\n                        <button className=\"btn btn-info\" data-toggle=\"modal\" data-target={\"#modal-graph-\"+this.props.k}>Graph</button>\n                    </div>\n                    <div className=\"col-lg-6 text-right\">\n                        <button className=\"btn btn-warning\" onClick={this.deleteStocks} disabled={!someSelected}>Delete selected</button>\n                    </div>\n                </div>\n            </div>\n            <RenamePortfolioModal k={this.props.k} initialName={this.props.name} renameHandler={this.rename}/>\n            <AddStockModal k={this.props.k} addStockHandler={this.addStock} isCorrectSymbolHandler={this.props.isCorrectSymbolHandler}/>\n            <GraphModal k={this.props.k} name={this.props.name} stocks={this.props.stocks}/>\n            \n        </div>);\n    }\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            portfolios: [], \n            portfolioCounter: 0 // We use an index counter to have an unique index for each created portfolios, even when some are deleted. \n        };\n        this.stocksData = {};   // Stocks data from iextrading.com API\n        this.USDtoEUR = 1; // USD to EUR conversion, from fixer.io API\n\n        // We need these bindings to be able to use 'this' in the handlers\n        this.addPortfolio = this.addPortfolio.bind(this);\n        this.deletePortfolio = this.deletePortfolio.bind(this);\n        this.renamePortfolio = this.renamePortfolio.bind(this);\n        this.setStocks = this.setStocks.bind(this);\n        this.setCurrency = this.setCurrency.bind(this);\n        this.isCorrectSymbol = this.isCorrectSymbol.bind(this);\n        this.getStockValue = this.getStockValue.bind(this);\n        this.selectStock = this.selectStock.bind(this);\n        this.deleteStocks = this.deleteStocks.bind(this);\n    }\n\n    refreshSymbolsList() {\n        console.log(\"Refreshing symbols list...\");\n        /* jQuery.ajax({\n            url: \"https://api.iextrading.com/1.0/tops/last\", \n            dataType: \"json\", \n            success: (e) => { this.stocksData = Object.values(e).reduce((m, o) => { m[o.symbol] = o.price; return m; }, {}); },\n            error: (e) => {alert(`Error while retrieving stocks symbols list...`);} \n        }); */\n        fetch(\"https://api.iextrading.com/1.0/tops/last\")\n        .then(res => res.json())\n        .then((e) => { this.stocksData = Object.values(e).reduce((m, o) => { m[o.symbol] = o.price; return m; }, {}); }, \n        (e) => {alert(`Error while retrieving stocks symbols list...`);});\n    }\n\n    refreshCurrencyRate() {\n        /* jQuery.ajax({\n            url: \"http://data.fixer.io/api/latest?access_key=c2ee9ab174d4f390e2dd97796eb51968&symbols=USD\", \n            dataType: \"json\", \n            success: (e) => { this.USDtoEUR = e.success ? 1/e.rates.USD : 1; console.log(\"cur : \"+this.USDtoEUR); },\n            error: (e) => { alert(`Error while retrieving currencies rates.`); } \n        }); */\n        fetch(\"http://data.fixer.io/api/latest?access_key=c2ee9ab174d4f390e2dd97796eb51968&symbols=USD\")\n        .then(res => res.json())\n        .then((e) => { this.USDtoEUR = e.success ? 1/e.rates.USD : 1; console.log(\"cur : \"+this.USDtoEUR); },\n        (e) => { alert(`Error while retrieving currencies rates.`);})\n    }\n\n    componentDidMount() {\n        this.refreshCurrencyRate();\n        this.refreshSymbolsList();\n        this.symbolRefreshId = setInterval(() => this.refreshSymbolsList(), 1000*60*5);   // Refresh symbols list every 5 minutes. \n        this.rateRefreshId = setInterval(() => this.refreshCurrencyRate(), 1000*60*60);   // Refresh currency rate every hour. \n        // Load state if we find some save data : \n        var save = localStorage.getItem(\"state\");\n        if(save !== null) {\n            this.setState(JSON.parse(save));\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.symbolRefreshId);\n        clearInterval(this.rateRefreshId);\n    }\n\n    saveState() {\n        if(typeof(Storage) !== \"undefined\") {\n            localStorage.setItem(\"state\", JSON.stringify(this.state));\n        }\n    }\n\n    addPortfolio(e) {\n        if(this.state.portfolios.length < 10) {\n        this.setState({\n            // React needs the key property to identify components\n            portfolios: [].concat(this.state.portfolios, {\n                key: this.state.portfolioCounter,\n                name: \"Portfolio \" + (this.state.portfolioCounter + 1),\n                currency: '€', \n                rate: this.USDtoEUR, \n                stocks: {}\n                /*\n                {\n                    \"Symbol\": {\n                    \"value\": X, \n                    \"quantity\": X, \n                    \"selected\": X\n                    }, \n                    ...\n                }\n                */\n                }), \n                maxPortfolios: (this.state.portfolios.length < 10), \n                portfolioCounter: this.state.portfolioCounter + 1, \n        }, () => { this.saveState(); });\n        }\n    }\n\n    deletePortfolio(id) {\n        this.setState({\n            portfolios: this.state.portfolios.filter((p) => p.key !== id), \n            maxPortfolios: (this.state.portfolios.length < 10)\n        }, () => { this.saveState(); });\n    }\n\n    renamePortfolio(id, newName) {\n        this.setState({\n            portfolios: this.state.portfolios.map((p) => {\n                if(p.key === id) { p.name = newName; }\n                return p;\n            }),\n        }, () => { this.saveState(); });\n    }\n\n    setStocks(portfolioId, newStocks) {\n        this.setState({\n            portfolios: this.state.portfolios.map((p) => {\n                if(p.key === portfolioId) { p.stocks = newStocks; }\n                return p;\n            }),\n        }, () => { this.saveState(); });\n    }\n\n    setCurrency(portfolioId, currency) {\n        this.setState({\n            portfolios: this.state.portfolios.map((p) => {\n                if(p.key === portfolioId) { \n                    p.currency = currency;\n                    p.rate = currency === '€' ? this.USDtoEUR : 1;\n                }\n                return p;\n            }),\n        }, () => { this.saveState(); });\n    }\n\n    selectStock(portfolioId, symbol, value) {\n        // We do not need to save the state when selecting stocks\n        this.setState({\n            portfolios: this.state.portfolios.map((p) => {\n                if(p.key === portfolioId) { \n                    Object.entries(p.stocks).map(s => {\n                        if(s[0] === symbol) {\n                            s[1].selected = value;\n                        }\n                        return s;\n                    })\n                }\n                return p;\n            }),\n        });\n    }\n\n    deleteStocks(portfolioId) {\n        this.setState({\n            portfolios: this.state.portfolios.map((p) => {\n                if(p.key === portfolioId) { \n                    p.stocks = (e => {  // Closure to apply custom filter\n                        var res = {};\n                        Object.entries(e).map(i => {\n                            if(!i[1].selected) { res[i[0]] = i[1]; }\n                            return i;\n                        });\n                        return res;\n                    })(p.stocks);\n                }\n                return p;\n            }),\n        }, () => { this.saveState(); });\n    }\n\n    /*\n        CACHE SYSTEM\n        We use a cache server to keep the stock values. This allows us to limit the rate of API calls\n        while maintaining a correct freshness of the results. \n    */\n\n    isCorrectSymbol(stock) {\n        return this.stocksData.hasOwnProperty(stock);\n    }\n\n    getStockValue(stock) {\n        return this.isCorrectSymbol(stock) ? this.stocksData[stock] : 0;\n    }\n\n    render() {\n        var portfoliosList = [];    // This array is used to split all portfolios into equal sized chunks, to be displayed on rows.\n        for(var i = 0; i<this.state.portfolios.length; i+= 2) {\n            var chunk = this.state.portfolios.slice(i, i+2).map(p => <Portfolio key={p.key} k={p.key} name={p.name} currency={p.currency} stocks={p.stocks} rate={p.rate} deleteHandler={this.deletePortfolio} renameHandler={this.renamePortfolio} setStocksHandler={this.setStocks} setCurrencyHandler={this.setCurrency} isCorrectSymbolHandler={this.isCorrectSymbol} getStockValueHandler={this.getStockValue} selectHandler={this.selectStock} deleteStocksHandler={this.deleteStocks}/>);\n            // We push a chunk in a bootstrap row, and assign to this row an unique key\n            portfoliosList.push(<div className=\"row\" key={this.state.portfolios.length + i}>{chunk}</div>);\n        }\n        return (<div>\n            <PrimaryButton text=\"Add new portfolio\" clickHandler={this.addPortfolio} disabled={this.state.portfolios.length >= 10}/>\n            {portfoliosList}\n        </div>);\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}